- name: Create mysql wordpress database
  mysql_db:
    name: "{{ wp_mysql_db }}"
    state: present
    login_user: "{{mysql_root_user}}"
    login_password: "{{mysql_root_pass}}"
  become: true

- name: Create mysql wordpress user
  become: true
  mysql_user:
    name: "{{ wp_mysql_user }}"
    login_user: "{{mysql_root_user}}"
    login_password: "{{mysql_root_pass}}"
    password: "{{ wp_mysql_password }}"
    priv: "{{ wp_mysql_db }}.*:ALL"

- name: Download WordPress
  get_url:
    url: https://wordpress.org/latest.tar.gz
    dest: /tmp/wordpress.tar.gz
    validate_certs: no

- name: Extract WordPress
  unarchive:
    src: /tmp/wordpress.tar.gz
    dest: /tmp/
    copy: no
  become: true

- name: Ensures Directory and all containing files are deleted before re-installing. (Maintain Idempotence)
  file:
    path: "{{ wp_directory }}"
    state: absent
  become: true

- name: Creates directory
  file:
    path: "{{ wp_directory }}"
    state: directory
  become: true

# use shell module instead of command module to allow globbing
# https://stackoverflow.com/questions/43876766/how-can-i-move-all-files-in-a-directory-to-another-using-ansible-module
- name: Move wordpress
  shell: mv /tmp/wordpress/* {{ wp_directory }}
  become: true

- name: Set owner/group to www-data:www-data, permissions to 0700, for wordpress site directory
  become: true
  file:
    dest: "{{ wp_directory }}"
    owner: www-data
    group: www-data
    mode: 0700
    recurse: yes

# set to 400 permissions
- name: Copy wp-config to wordpress
  become: true
  template:
    src: wp-config.php
    dest: "{{ wp_directory }}"
    owner: www-data
    group: www-data
    mode: 400

- name: Create snippets folder for nginx if not exists
  file:
    path: /etc/nginx/snippets
    state: directory
  become: true

- name: Copy nginx http config to sites-available
  template:
    src: wordpress-http.conf
    dest: /etc/nginx/sites-available/{{ http_conf_name_nginx }}
    owner: root
    group: root
  become: true

- name: Copy main-config to snippets
  template:
    src: main-config.conf
    dest: /etc/nginx/snippets
    owner: root
    group: root
  become: true

- name: Create symbolic link in sites-enabled for http conf.
  file:
    src: /etc/nginx/sites-available/{{ http_conf_name_nginx }}
    dest: /etc/nginx/sites-enabled/{{ http_conf_name_nginx }}
    state: link
  become: true

- name: restart nginx
  service:
    name: nginx
    state: restarted
  become: true
